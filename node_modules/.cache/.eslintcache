[{"D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\index.js":"1","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\App.js":"2","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\Home.js":"3","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\About.js":"4","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\Signup.js":"5","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\Login.js":"6","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\Navbar.js":"7","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Context\\notes\\NoteState.js":"8","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\Notes.js":"9","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Context\\notes\\NoteContext.js":"10","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\NoteItem.js":"11","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\AddNote.js":"12"},{"size":257,"mtime":1680025687529,"results":"13","hashOfConfig":"14"},{"size":874,"mtime":1705588265852,"results":"15","hashOfConfig":"14"},{"size":372,"mtime":1705502592209,"results":"16","hashOfConfig":"14"},{"size":470,"mtime":1705502614137,"results":"17","hashOfConfig":"14"},{"size":2880,"mtime":1705589786918,"results":"18","hashOfConfig":"14"},{"size":2350,"mtime":1705589796102,"results":"19","hashOfConfig":"14"},{"size":2080,"mtime":1705501293698,"results":"20","hashOfConfig":"14"},{"size":2486,"mtime":1705589805085,"results":"21","hashOfConfig":"14"},{"size":4527,"mtime":1705497615918,"results":"22","hashOfConfig":"14"},{"size":107,"mtime":1680603652634,"results":"23","hashOfConfig":"14"},{"size":735,"mtime":1702407864807,"results":"24","hashOfConfig":"14"},{"size":1838,"mtime":1681586911715,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1javq5b",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\index.js",[],[],"D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\App.js",[],[],"D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\Home.js",[],[],"D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\About.js",["67","68"],[],"import React from 'react'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst About = () => {\r\n  \r\n  return (\r\n   <div> \r\n    {localStorage.getItem(\"token\") === null?<div\r\n        className={`alert alert-primary`}\r\n        role=\"alert\"\r\n      >\r\n        Please login or signup to start keeping your notes\r\n      </div>:\"\"}\r\nThis Application is for storing and managing your daily tasks</div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\Signup.js",[],[],"D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\Login.js",[],[],"D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\Navbar.js",["69"],[],"import React,{useEffect} from 'react'\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n  let location = useLocation();\r\n  const navigate=useNavigate();\r\n\r\n  const logoutHandle=()=>{\r\n    localStorage.removeItem('token');\r\n    if(localStorage.getItem('token')===null){\r\n      navigate('/signup');\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(location);\r\n  }, [location]);\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/Cloud-Book\">Cloud Book</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className={`nav-link ${location.pathname===\"/\"?\"active\":\"\"}`} aria-current=\"page\" to=\"/Cloud-Book\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className={`nav-link ${location.pathname===\"/about\"?\"active\":\"\"}`} to=\"/about\">About</Link>\r\n        </li>\r\n        <li>\r\n\r\n        </li>\r\n       \r\n      </ul>\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <Link to=\"/login\" type=\"button\" className={`btn btn-primary mx-1 ${localStorage.getItem('token')===null?'visible':'invisible'} `} >Login</Link>\r\n        <Link to=\"/signup\" type=\"button\" className={`btn btn-outline-primary mx-11  ${localStorage.getItem('token')===null?'visible':'invisible'}`}>Sign up</Link>\r\n        <a onClick={logoutHandle} type=\"button\" className={`btn btn-danger mx-1 ${localStorage.getItem('token')===null?'invisible':'visible'} `} >Logout</a>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Context\\notes\\NoteState.js",["70","71"],[],"import { useState } from \"react\";\r\nimport NoteContext from \"./NoteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const host='https://cloud-book-omega.vercel.app';\r\n  const noteData = [];\r\n  const [notes, setNote] = useState(noteData);\r\n  const localToken=localStorage.getItem('token')\r\n\r\n  const getNote =async () => {\r\n    const response = await fetch(`${host}/api/v1/notes/allnotes`, {\r\n      method: \"GET\", \r\n      headers: {\r\n        mode: 'no-cors',\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\" :localToken\r\n      },\r\n      \r\n    });\r\n    const jsondata=await response.json();\r\n    console.log(jsondata);\r\n    setNote(jsondata.notes);\r\n  };\r\n\r\n  const addNote =async (title, description, tag) => {\r\n    const response = await fetch(`${host}/api/v1/notes/addnote`, {\r\n      method: \"POST\", \r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\" :localToken\r\n      },\r\n      \r\n      body: JSON.stringify({title,description,tag}), \r\n    });\r\n\r\n    let note = await response.json();   \r\n    setNote(notes.concat(note));\r\n   \r\n  };\r\n\r\n\r\n  const deleteNote =async (id) => {\r\n    const response = await fetch(`${host}/api/v1/notes/deletenote/${id}`, {\r\n      method: \"DELETE\", \r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\" :localToken\r\n      },\r\n      \r\n    });\r\n     const jsondata=response.json();\r\n\r\n    console.log(\"deleted id\" + id);\r\n    const newNote = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    setNote(newNote);\r\n  };\r\n\r\n\r\n  const editNote =async (id, title, description, tag) => {\r\n    const response = await fetch(`${host}/api/v1/notes/updatenote/${id}`, {\r\n      method: \"PUT\", \r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\" :localToken\r\n      },\r\n      \r\n      body: JSON.stringify({title,description,tag}), \r\n    });\r\n     const jsondata=response.json();\r\n\r\n    let newNote=JSON.parse(JSON.stringify(notes));\r\n\r\n    for (let index = 0; index < notes.length; index++) {\r\n      const element = newNote[index];\r\n      if (element._id === id) {\r\n        newNote[index].title = title;\r\n        newNote[index].description = description;\r\n        newNote[index].tag = tag;\r\n        break;\r\n      }\r\n    }\r\n    setNote(newNote);\r\n  };\r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote,getNote }}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\nexport default NoteState;\r\n","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\Notes.js",["72"],["73"],"import React, { useContext, useRef, useState, useEffect } from \"react\";\r\nimport NoteContext from \"../Context/notes/NoteContext\";\r\nimport NoteItem from \"./NoteItem\";\r\nimport AddNote from \"./AddNote\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction Notes() {\r\n  const context = useContext(NoteContext);\r\n  const { notes, getNote,editNote } = context;\r\n\r\n  const [note, setNotes] = useState({\r\n    id:\"\",\r\n    etitle: \"\",\r\n    edescription: \"\",\r\n    etag: \"default\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getNote();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const ref = useRef(null);\r\n  const refClose=useRef(null);\r\n  const updatenote = (currentnote) => {\r\n    ref.current.click();\r\n    setNotes({id:currentnote._id ,etitle:currentnote.title,edescription:currentnote.description,etag:currentnote.tag});\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    \r\n    editNote(note.id,note.etitle,note.edescription,note.etag);\r\n    refClose.current.click();\r\n\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setNotes({ ...note, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AddNote />\r\n\r\n      <button\r\n        ref={ref}\r\n        type=\"button\"\r\n        className=\"btn btn-primary d-none\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#exampleModalCenter\"\r\n      >\r\n        Launch demo modal\r\n      </button>\r\n\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModalCenter\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"exampleModalCenterTitle\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\r\n                Modal title\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <Form>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label htmlFor=\"title\">Title</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"etitle\"\r\n                    name=\"etitle\"\r\n                    placeholder=\"Enter your Title\"\r\n                    value={note.etitle}\r\n                    onChange={onChange}\r\n                    minLength={2} required\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label htmlFor=\"description\">Description</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"edescription\"\r\n                    name=\"edescription\"\r\n                    placeholder=\"Enter your Description\"\r\n                    value={note.edescription}\r\n                    onChange={onChange}\r\n                    minLength={5} required\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label htmlFor=\"tag\">Tag</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"etag\"\r\n                    name=\"etag\"\r\n                    placeholder=\"Enter your Description\"\r\n                    value={note.etag}\r\n                    onChange={onChange}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-bs-dismiss=\"modal\"\r\n                ref={refClose}\r\n              >\r\n                Close\r\n              </button>\r\n              <button disabled={note.etitle.length<3 || note.edescription.length<5} type=\"button\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                Update Note\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row my-3\">\r\n        <h1>Your notes</h1>\r\n        {notes?.map((note) => {\r\n          return (\r\n            <NoteItem note={note} updatenote={updatenote} key={note._id} />\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n","D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Context\\notes\\NoteContext.js",[],[],"D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\NoteItem.js",[],[],"D:\\My Code\\MERN Projects\\Cloud-Book-MERN\\src\\Components\\AddNote.js",["74"],[],"import React,{useContext, useState} from 'react'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Notes from './Notes';\r\nimport NoteContext from '../Context/notes/NoteContext';\r\n\r\nfunction AddNote() {\r\n    const context=useContext(NoteContext);\r\n    const{addNote}=context;\r\n\r\n    const[note,setNotes]=useState({title:\"\",description:\"\",tag:\"default\"})\r\n    \r\n    const handleClick=(e)=>{\r\n        e.preventDefault();\r\n        addNote(note.title,note.description,note.tag);\r\n        setNotes({title:\"\",description:\"\",tag:\"\"});\r\n    } \r\n\r\n    const onChange=(e)=>{\r\n      setNotes({...note,[e.target.name] : e.target.value});\r\n\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <div className='container my-3'>\r\n      <h1>Add Your Notes</h1> \r\n      <Form>\r\n      <Form.Group className=\"mb-3\" >\r\n        <Form.Label htmlFor='title'>Title</Form.Label>\r\n        <Form.Control minLength={2} required type=\"text\" id='title' name='title' placeholder=\"Enter your Title\" onChange={onChange} value={note.title}/>\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" >\r\n        <Form.Label htmlFor='description'>Description</Form.Label>\r\n        <Form.Control minLength={5} required type=\"text\" id='description' name='description' placeholder=\"Enter your Description\" onChange={onChange} value={note.description}/>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" >\r\n        <Form.Label htmlFor='tag'>Tag</Form.Label>\r\n        <Form.Control type=\"text\" id='tag' name='tag' placeholder=\"Enter your Description\" onChange={onChange} value={note.tag} />\r\n      </Form.Group>\r\n      <Button disabled={note.title.length<3 || note.description.length<5} variant=\"primary\" type=\"submit\" onClick={handleClick}>\r\n        Add Note\r\n      </Button>\r\n    </Form>\r\n    </div>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default AddNote\r\n",{"ruleId":"75","severity":1,"message":"76","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":12},{"ruleId":"75","severity":1,"message":"79","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":47,"column":9,"nodeType":"82","endLine":47,"endColumn":147},{"ruleId":"75","severity":1,"message":"83","line":51,"column":12,"nodeType":"77","messageId":"78","endLine":51,"endColumn":20},{"ruleId":"75","severity":1,"message":"83","line":71,"column":12,"nodeType":"77","messageId":"78","endLine":71,"endColumn":20},{"ruleId":"75","severity":1,"message":"79","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":22,"column":6,"nodeType":"86","endLine":22,"endColumn":8,"suggestions":"87","suppressions":"88"},{"ruleId":"75","severity":1,"message":"89","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":13},"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'jsondata' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNote'. Either include it or remove the dependency array.","ArrayExpression",["90"],["91"],"'Notes' is defined but never used.",{"desc":"92","fix":"93"},{"kind":"94","justification":"95"},"Update the dependencies array to be: [getNote]",{"range":"96","text":"97"},"directive","",[601,603],"[getNote]"]